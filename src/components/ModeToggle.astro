---
---
<span
  class="dark:i-carbon-moon i-carbon-sun cursor-pointer"
  id="modeToggle"
/>

<!-- <script is:inline>
  // 默认主题
  const defaultTheme = 'dark';
  // 存储
  const storage = {
    themeKey: 'theme',
    get(key) {
      return localStorage.getItem(key);
    },
    set(key, value) {
      localStorage.setItem(key, value);
    },
    getTheme() {
      return this.get(this.themeKey)
    },
    setTheme(value) {
      this.set(this.themeKey, value)
    }
  }
  initTheme();
  // 初始化主题
  function initTheme() {
    const theme = getTheme() || defaultTheme;
    applyTheme(theme);
    // storage.setTheme(theme);
  }
  // 获取主题
  function getTheme() {
    // 1. 从 localStorage 中获取
    if (typeof localStorage !== 'undefined' && storage.getTheme()) {
      return storage.getTheme();
    }
    // 2. 从系统主题中获取
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    // 3. 回退明亮模式
    return 'light';
  }
  // 应用主题
  function applyTheme(theme) {
    if (theme === 'light') {
      document.documentElement.classList.remove('dark');
    } else {
      document.documentElement.classList.add('dark');
    }
  }
</script> -->

<script>
  document.addEventListener('astro:page-load', () => {
    // 默认主题
    const defaultTheme = 'dark';
    // 存储
    const storage = {
      themeKey: 'theme',
      get(key: string) {
        return localStorage.getItem(key);
      },
      set(key: string, value: string) {
        localStorage.setItem(key, value);
      },
      getTheme() {
        return this.get(this.themeKey)
      },
      setTheme(value: string) {
        this.set(this.themeKey, value)
      }
    }
    initTheme();
    // 初始化主题
    function initTheme() {
      const theme = getTheme() || defaultTheme;
      applyTheme(theme);
      storage.setTheme(theme);
    }
    // 获取主题
    function getTheme() {
      // 1. 从 localStorage 中获取
      if (typeof localStorage !== 'undefined' && storage.getTheme()) {
        return storage.getTheme();
      }
      // 2. 从系统主题中获取
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark';
      }
      // 3. 回退明亮模式
      return 'light';
    }
    // 应用主题
    function applyTheme(theme: string) {
      if (theme === 'light') {
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.add('dark');
      }
    }
    // 获取 DOM 元素
    const oModeToggle = document.getElementById("modeToggle");
    // 切换明暗模式
    const handleModeToggle = () => {
      const element = document.documentElement;
      // 切换
      element.classList.toggle("dark");

      const isDark = element.classList.contains("dark");
      storage.setTheme(isDark ? "dark" : "light")
    }
    // 绑定事件
    oModeToggle?.addEventListener("click", handleModeToggle);
  });
</script>
